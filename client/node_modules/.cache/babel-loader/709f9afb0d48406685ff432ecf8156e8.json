{"ast":null,"code":"var _jsxFileName = \"D:\\\\CabBooking\\\\Real-Time-Taxi-App\\\\client\\\\src\\\\contexts\\\\SocketProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { io } from \"socket.io-client\"; // const ENDPOINT = \"http://127.0.0.1:5000\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/React.createContext();\nexport function useSocket() {\n  _s();\n\n  return useContext(SocketContext);\n}\n\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function SocketProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [socket, setSocket] = useState();\n  const [id, setId] = useState('');\n\n  const getId = value => {\n    setId(value);\n  };\n\n  useEffect(() => {\n    if (id != null) {\n      const newSocket = io('http://localhost:5000', {\n        query: {\n          id\n        }\n      });\n      setSocket(newSocket);\n      return () => newSocket.close();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      getId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // export default function Socketio() {\n//     const socket = io(ENDPOINT);\n//     // socket.on(\"connect\", () => {\n//     //     console.log(\"your Socket id is \", `${socket.id}`)\n//     // })\n//   return socket;\n// };\n\n_s2(SocketProvider, \"UjIY8Le75+62xjS9G0TpJoX+otk=\");\n\n_c = SocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"sources":["D:/CabBooking/Real-Time-Taxi-App/client/src/contexts/SocketProvider.js"],"names":["React","useContext","useEffect","useState","io","SocketContext","createContext","useSocket","SocketProvider","children","socket","setSocket","id","setId","getId","value","newSocket","query","close"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,EAAT,QAAmB,kBAAnB,C,CAEA;;;AAEA,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAN,EAAtB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,SAAON,UAAU,CAACI,aAAD,CAAjB;AACD;;GAFeE,S;;AAIhB,OAAO,SAASC,cAAT,OAAsC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,EAAD,CAA5B;;AAEA,QAAMW,KAAK,GAAIC,KAAD,IAAW;AACvBF,IAAAA,KAAK,CAACE,KAAD,CAAL;AACD,GAFD;;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,EAAE,IAAI,IAAT,EAAe;AAEb,YAAMI,SAAS,GAAGZ,EAAE,CAClB,uBADkB,EAElB;AAAEa,QAAAA,KAAK,EAAE;AAAEL,UAAAA;AAAF;AAAT,OAFkB,CAApB;AAIAD,MAAAA,SAAS,CAACK,SAAD,CAAT;AAEA,aAAO,MAAMA,SAAS,CAACE,KAAV,EAAb;AACD;AACF,GAXQ,EAWN,CAACN,EAAD,CAXM,CAAT;AAaA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAD;AAASI,MAAAA;AAAT,KAA/B;AAAA,cACIL;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;;IAlCgBD,c;;KAAAA,c","sourcesContent":["import React, {useContext, useEffect, useState } from 'react';\r\nimport { io } from \"socket.io-client\";\r\n\r\n// const ENDPOINT = \"http://127.0.0.1:5000\";\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState()\r\n  const [id, setId] = useState('')\r\n\r\n  const getId = (value) => {\r\n    setId(value)\r\n  }\r\n  useEffect(() => {\r\n    if(id != null) {  \r\n      \r\n      const newSocket = io(\r\n        'http://localhost:5000',\r\n        { query: { id } }\r\n      )\r\n      setSocket(newSocket)\r\n\r\n      return () => newSocket.close()\r\n    }\r\n  }, [id])\r\n\r\n  return (\r\n    <SocketContext.Provider value={{socket, getId}}>\r\n      { children }\r\n    </SocketContext.Provider>\r\n  )\r\n}\r\n\r\n// export default function Socketio() {\r\n\r\n//     const socket = io(ENDPOINT);\r\n//     // socket.on(\"connect\", () => {\r\n//     //     console.log(\"your Socket id is \", `${socket.id}`)\r\n//     // })\r\n//   return socket;\r\n// };"]},"metadata":{},"sourceType":"module"}