{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEfect, useEffect, useState } from 'react';\nconst PREFIX = 'realtime-taxi-clone-';\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != 'undefined' || jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"jwDaQmZZuLHAweUM5Pf5uW0nA/U=\");\n\n; // import { useEffect, useState } from 'react';\n// const PREFIX = 'realtime-taxi-clone-'\n// function useLocalStorage(key, initialValue) {\n//     const prefixedKey = PREFIX + key\n//     const [value, setValue] = useState(() => {\n//         const jsonValue = localStorage.getItem(prefixedKey);\n//         if (jsonValue != null) return JSON.parse(jsonValue);\n//         if (typeof initialValue === 'function') {\n//             return initialValue()\n//         } else {\n//             return initialValue\n//         }\n//     })\n//     useEffect(() => {\n//         localStorage.setItem(prefixedKey, JSON.stringify(value))\n//     },[prefixedKey, value])\n//     return [value, setValue] \n// };\n// export default useLocalStorage;","map":{"version":3,"sources":["D:/CabBooking/Real-Time-Taxi-App/client/src/hooks/useLocalStorage.js"],"names":["useEfect","useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,MAAMC,MAAM,GAAG,sBAAf;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AACvD,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACrC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;AACA,QAAGG,SAAS,IAAI,WAAb,IAA4BA,SAAS,IAAI,IAA5C,EAAkD,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AAClD,QAAG,OAAOJ,YAAP,KAAwB,UAA3B,EAAuC;AACnC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAEO;AACH,aAAOA,YAAP;AACH;AACJ,GARiC,CAAlC;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACD,WAAD,EAAcC,KAAd,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;GAjBuBL,e;;AAiBvB,C,CAID;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import { useEfect, useEffect, useState } from 'react';\r\n\r\nconst PREFIX = 'realtime-taxi-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n        if(jsonValue != 'undefined' || jsonValue != null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n};\r\n\r\n\r\n\r\n// import { useEffect, useState } from 'react';\r\n\r\n// const PREFIX = 'realtime-taxi-clone-'\r\n\r\n// function useLocalStorage(key, initialValue) {\r\n//     const prefixedKey = PREFIX + key\r\n//     const [value, setValue] = useState(() => {\r\n//         const jsonValue = localStorage.getItem(prefixedKey);\r\n//         if (jsonValue != null) return JSON.parse(jsonValue);\r\n//         if (typeof initialValue === 'function') {\r\n//             return initialValue()\r\n//         } else {\r\n//             return initialValue\r\n//         }\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n//     },[prefixedKey, value])\r\n\r\n//     return [value, setValue] \r\n// };\r\n\r\n// export default useLocalStorage;"]},"metadata":{},"sourceType":"module"}